"""
Django settings for ots project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import django_heroku 

import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


#EMAILER
SMTP_SERVER = "mail.knetgh.com"
SMTP_PORT = 587
SMTP_SENDER_EMAIL = "no-reply@ecntv.net"
SMTP_SENDER_PASSWORD = "ux3j1nd1"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '3%rvihkf07ucv-qbh$n6b5&z-flu_fgkiqq80e$8k1m-+fx!d*'

SECRET_KEY = os.environ.get('SECRET_KEY','3%rvihkf07ucv-qbh$n6b5&z-flu_fgkiqq80e$8k1m-+fx!d*')

# SECRET_KEY = config('SECRET_KEY')
# DEBUG = config('DEBUG', default=False, cast=bool)

# DATABASES = {
#     'default': dj_database_url.config(default=config('DATABASE_URL'))
# }

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ 
 

]

CSRF_COOKIE_SECURE=False
SESSION_COOKIE_SECURE=False



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    # 'rest_framework.authtoken',
    # 'storages',
    'authentication.apps.AuthenticationConfig',
    'teacher.apps.TeacherConfig',
    'school.apps.SchoolConfig',
    'student.apps.StudentConfig',
    'subjects.apps.SubjectsConfig',
    'chapter.apps.ChapterConfig',
    'lecture.apps.LectureConfig',
    'classes.apps.ClassesConfig',
    'attendance.apps.AttendanceConfig',
    'class_level.apps.ClassLevelConfig',
    #'school_A_classes.apps.SchoolAClassesConfig'

]

MIDDLEWARE = [
    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



AUTH_USER_MODEL = 'authentication.User'
ROOT_URLCONF = 'ots.urls'
# 

REST_FRAMEWORK = {
    # 'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework.authentication.TokenAuthentication',  # <-- And here
    
    # ],
    # 'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework_simplejwt.authentication.JWTAuthentication',],
    'DEFAULT_AUTHENTICATION_CLASSES': ('authentication.backends.JWTAuthentication',),
    'EXCEPTION_HANDLER':    'utils.exception_handler.custom_exception_handler',
    'NON_FIELD_ERRORS_KEY': 'errors',
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',),   
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'authentication.backends.JWTAuthentication',),
#     'EXCEPTION_HANDLER':
#     'utils.exception_handler.custom_exception_handler',
#     'NON_FIELD_ERRORS_KEY': 'errors',

#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.AllowAny',
#     ),
    
#     'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
#     # 'DEFAULT_VERSION': 'v1',
#     # 'ALLOWED_VERSIONS': ('v1',),
#     'DEFAULT_PAGINATION_CLASS':
#         'rest_framework.pagination.LimitOffsetPagination',
#     'PAGE_SIZE': 10,
#     # 'DEFAULT_FILTER_BACKENDS': (
#     #     'django_filters.rest_framework.DjangoFilterBackend',
#     #     'rest_framework.filters.OrderingFilter',
#     # ),
#     'TEST_REQUEST_DEFAULT_FORMAT': 'json',   
# }

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'ots.wsgi.application'

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         # 'LOCATION': 'OTP',
#     }
# }

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}




# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

# DATETIME_FORMAT = '%d-%m-%Y'

USE_I18N = True

USE_L10N = True

USE_TZ = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# STATIC_URL = '/static/'
# -----------------------------------for deployemnt---------------------

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

django_heroku.settings(locals())